给定一个非负索引 k，其中 k ≤ 33，返回杨辉三角的第 k 行。



在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 3
输出: [1,3,3,1]


我的算法

class Solution {
    public List<Integer> getRow(int rowIndex) {
        
        List<List<Integer>> result = new ArrayList<List<Integer>>(rowIndex+1);
        if(rowIndex==0){
            List<Integer> list=new ArrayList<Integer>(1);
            list.add(1);
            
            return list;
        }
        
        List<Integer> temp=new ArrayList<Integer>();
        temp.add(1);
        result.add(temp);
        for(int i=1;i<rowIndex+1;i++){
            List<Integer> thisRow = new ArrayList<Integer>();
            thisRow.add(1);
            for(int j=1;j<i;j++){
            thisRow.add(result.get(i-1).get(j-1)+result.get(i-1).get(j));
                
            }
            thisRow.add(1);
            result.add(thisRow);
            
            
        }
        return result.get(rowIndex);
        
    }
}



复杂度为(n)算法

public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> list = new ArrayList<Integer>();
        list.add(1);
        for (int k = 1; k <= rowIndex; k++) {
            for (int i = k - 1; i >= 1; i--) {
                list.set(i, list.get(i) + list.get(i - 1));
            }
            list.add(1);
        }
        return list;
    }
}
