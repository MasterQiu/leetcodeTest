给定一个包含 m x n 个元素的矩阵（m 行, n 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。

示例 1:

输入:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
输出: [1,2,3,6,9,8,7,4,5]
示例 2:

输入:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
输出: [1,2,3,4,8,12,11,10,9,5,6,7]



class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
         List<Integer> res=new ArrayList<>();
       if(matrix==null||matrix.length==0||(matrix.length==1&&matrix[0].length==0)) return res ;
        int m=matrix.length;
        int n=matrix[0].length;
        
       
        int circle=m>n?(n+1)/2:(m+1)/2;
        for(int i=0;i<circle;i++){
            for(int j=i;j<n-i;j++){//第一行
                res.add(matrix[i][j]);
            }
            for(int j=i+1;j<m-i;j++){
                res.add(matrix[j][n-i-1]);
            }
            if((m-2*i)==1||(n-2*i)==1){
                break;
            }
            for(int j=n-i-2;j>=i;j-- ){                res.add(matrix[m-i-1][j]);
            }
            for(int j=m-i-2;j>=i+1;j--){
                res.add(matrix[j][i]);
            }
        }
        return res;
    }
}
